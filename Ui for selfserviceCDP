import React, { useState } from "react";
import { BrowserRouter as Router, Switch, Route, Link } from "react-router-dom";
import { AppBar, Toolbar, Typography, Container, Grid, TextField, Button } from "@material-ui/core";

interface Props {
  title: string;
}

const Header: React.FC<Props> = ({ title }) => {
  return (
    <AppBar position="static">
      <Toolbar>
        <Typography variant="h6">{title}</Typography>
      </Toolbar>
    </AppBar>
  );
};

const Footer: React.FC = () => {
  return (
    <footer>
      <Typography variant="body2" color="textSecondary" align="center">
        &copy; 2023 - ChatGPT
      </Typography>
    </footer>
  );
};

const Home: React.FC = () => {
  return (
    <Container maxWidth="md">
      <Grid container spacing={3}>
        <Grid item xs={12} sm={6}>
          <form>
            <TextField label="Input 1" fullWidth />
            <TextField label="Input 2" fullWidth />
            <TextField label="Input 3" fullWidth />
            <TextField label="Input 4" fullWidth />
            <Button variant="contained" color="primary" fullWidth>
              Submit
            </Button>
          </form>
        </Grid>
        <Grid item xs={12} sm={6}>
          <Button variant="contained" color="secondary" fullWidth>
            Upload
          </Button>
          <Button variant="contained" color="primary" fullWidth>
            Download
          </Button>
        </Grid>
      </Grid>
    </Container>
  );
};

const Page1: React.FC = () => {
  return (
    <Container maxWidth="md">
      <Typography variant="h4" align="center">
        Page 1
      </Typography>
    </Container>
  );
};

const Page2: React.FC = () => {
  return (
    <Container maxWidth="md">
      <Typography variant="h4" align="center">
        Page 2
      </Typography>
    </Container>
  );
};

const App: React.FC = () => {
  return (
    <Router>
      <Header title="My App" />
      <Switch>
        <Route exact path="/">
          <Home />
        </Route>
        <Route path="/page1">
          <Page1 />
        </Route>
        <Route path="/page2">
          <Page2 />
        </Route>
      </Switch>
      <Footer />
    </Router>
  );
};

export default App;



import React, { useState } from "react";
import {
  Button,
  Container,
  FormControl,
  FormHelperText,
  Input,
  InputLabel,
  makeStyles,
  Paper,
  Typography,
} from "@material-ui/core";

const useStyles = makeStyles((theme) => ({
  root: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    minHeight: "100vh",
  },
  form: {
    display: "flex",
    flexDirection: "column",
    justifyContent: "center",
    alignItems: "center",
    padding: theme.spacing(4),
  },
  inputs: {
    margin: theme.spacing(1),
    minWidth: 200,
  },
  buttons: {
    margin: theme.spacing(2),
  },
  fileInput: {
    display: "none",
  },
  fileInputLabel: {
    display: "flex",
    alignItems: "center",
    margin: theme.spacing(1),
  },
}));

const MyComponent: React.FC = () => {
  const classes = useStyles();
  const [formState, setFormState] = useState({
    input1: "",
    input2: "",
    input3: "",
    input4: "",
  });

  const handleInputChange = (
    event: React.ChangeEvent<HTMLInputElement>
  ): void => {
    setFormState({
      ...formState,
      [event.target.name]: event.target.value,
    });
  };

  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {
    event.preventDefault();
    console.log(formState);
    // submit logic here
  };

  const handleFileUpload = (
    event: React.ChangeEvent<HTMLInputElement>
  ): void => {
    console.log(event.target.files);
    // file upload logic here
  };

  const handleDownload = (): void => {
    console.log("download button clicked");
    // download logic here
  };

  return (
    <div className={classes.root}>
      <Container maxWidth="sm">
        <Paper className={classes.form} elevation={3}>
          <Typography variant="h5" gutterBottom>
            My Form
          </Typography>
          <form onSubmit={handleSubmit}>
            <FormControl className={classes.inputs}>
              <InputLabel htmlFor="input1">Input 1</InputLabel>
              <Input
                id="input1"
                name="input1"
                value={formState.input1}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl className={classes.inputs}>
              <InputLabel htmlFor="input2">Input 2</InputLabel>
              <Input
                id="input2"
                name="input2"
                value={formState.input2}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl className={classes.inputs}>
              <InputLabel htmlFor="input3">Input 3</InputLabel>
              <Input
                id="input3"
                name="input3"
                value={formState.input3}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl className={classes.inputs}>
              <InputLabel htmlFor="input4">Input 4</InputLabel>
              <Input
                id="input4"
                name="input4"
                value={formState.input4}
                onChange={handleInputChange}
              />
            </FormControl>
            <Button
              className={classes.buttons}
              variant="contained"
              color="primary"
              type="submit"
            >
              Submit
            </Button>
          </form>
        </Paper>
      </Container>
      <Container maxWidth="sm">
        <Paper className={classes.form}

