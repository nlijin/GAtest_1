import React, { useState, useEffect, useRef } from 'react';
import './ChatApp.css';
import axios from 'axios';

function ChatApp() {
  const [messages, setMessages] = useState([]);
  const [inputValue, setInputValue] = useState('');
  const [userId, setUserId] = useState('USER_ID');
  const [sessionId, setSessionId] = useState('');
  const inputRef = useRef(null);

  useEffect(() => {
    axios.get('https://your-api-endpoint.com/session', {
      params: {
        userId,
      },
    })
      .then((response) => {
        setSessionId(response.data.sessionId);
        sendInitialMessage();
      })
      .catch((error) => {
        console.log(error);
      });
  }, [userId]);

  const sendInitialMessage = () => {
    const message = {
      text: '',
      isUser: false,
    };

    axios.post('https://your-api-endpoint.com/message', {
      sessionId,
      message: {
        text: message.text,
        isUser: message.isUser,
      },
    })
      .then((response) => {
        setMessages((prevState) => [...prevState, response.data]);
      })
      .catch((error) => {
        console.log(error);
      });
  };

  const sendMessage = () => {
    const message = {
      text: inputValue,
      isUser: true,
    };

    setMessages((prevState) => [...prevState, message]);
    setInputValue('');

    axios.post('https://your-api-endpoint.com/message', {
      sessionId,
      message: {
        text: message.text,
        isUser: message.isUser,
      },
    })
      .then((response) => {
        setMessages((prevState) => [...prevState, response.data]);
      })
      .catch((error) => {
        console.log(error);
      });
  };

  const handleKeyDown = (event) => {
    if (event.key === 'Enter') {
      sendMessage();
    }
  };

  return (
    <div className="chat-container">
      <div className="chat-messages-container">
        {messages.map((message, index) => (
          <div
            key={index}
            className={`chat-message ${message.isUser ? 'user' : 'bot'}`}
          >
            <span className="chat-message-text">{message.text}</span>
          </div>
        ))}
      </div>
      <div className="chat-input-container">
        <input
          type="text"
          value={inputValue}
          onChange={(event) => setInputValue(event.target.value)}
          onKeyDown={handleKeyDown}
          ref={inputRef}
          className="chat-input"
        />
        <button onClick={sendMessage} className="chat-send-button">
          Send
        </button>
      </div>
    </div>
  );
}

export default ChatApp;
