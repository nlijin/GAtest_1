import React, { useState, useRef, useEffect } from 'react';
import './ChatApp.css';
import axios from 'axios';

function ChatApp() {
  const [messages, setMessages] = useState([]);
  const [inputValue, setInputValue] = useState('');
  const [sessionId, setSessionId] = useState('');
  const inputRef = useRef(null);

  useEffect(() => {
    axios.post('https://your-api-endpoint.com/chatbot/start')
      .then((response) => {
        setSessionId(response.data.sessionId);
        setMessages([{ text: response.data.message, isUser: false }]);
      })
      .catch((error) => {
        console.log(error);
      });
  }, []);

  const sendMessage = () => {
    const message = {
      text: inputValue,
      isUser: true,
    };

    setMessages((prevState) => [...prevState, message]);
    setInputValue('');

    axios.post('https://your-api-endpoint.com/chatbot/send', {
      sessionId,
      message: {
        text: message.text,
        isUser: message.isUser,
      },
    })
      .then((response) => {
        setSessionId(response.data.sessionId);
        setMessages((prevState) => [
          ...prevState,
          { text: response.data.message, isUser: false },
        ]);
      })
      .catch((error) => {
        console.log(error);
      });
  };

  const handleKeyDown = (event) => {
    if (event.key === 'Enter') {
      sendMessage();
    }
  };

  return (
    <div className="chat-container">
      <div className="chat-messages-container">
        {messages.map((message, index) => (
          <div
            key={index}
            className={`chat-message ${message.isUser ? 'user' : 'bot'}`}
          >
            <span className="chat-message-text">{message.text}</span>
          </div>
        ))}
      </div>
      <div className="chat-input-container">
        <input
          type="text"
          value={inputValue}
          onChange={(event) => setInputValue(event.target.value)}
          onKeyDown={handleKeyDown}
          ref={inputRef}
          className="chat-input"
        />
        <button onClick={sendMessage} className="chat-send-button">
          Send
        </button>
      </div>
    </div>
  );
}

export default ChatApp;

CSS
.chat-container {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.chat-messages-container {
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  padding: 10px;
  flex-grow: 1;
}

.chat-message {
  max-width: 70%;
  margin: 5px;
  padding: 10px;
  border-radius: 10px;
  display: inline-block;
  position: relative;
  font-size: 16px;
}

.chat-message.user {
  background-color: #80bfff;
  color: white;
  align-self: flex-end;
}

.chat-message.bot {
  background-color: #f2f2f2;
  color: black;
}

.chat-message.user::before {
  content: "";
  position: absolute;
  right: 100%;
  top: 50%;
  border-style: solid;
  border-width: 10px 0 10px 10px;
  border-color: transparent transparent transparent #80bfff;
  transform: translateY(-50%);
}

.chat-message.bot::before {
  content: "";
  position: absolute;
  left: 100%;
  top: 50%;
  border-style: solid;
  border-width: 10px 10px 10px 0;
  border-color: transparent #f2f2f2 transparent transparent;
  transform: translateY(-50%);
}

.chat-input-container {
  display: flex;
  padding: 10px;
}

.chat-input {
  flex-grow: 1;
  padding: 10px;
  font-size: 16px;
  border-radius: 10px;
  border: none;
  outline: none;
}

.chat-send-button {
  background-color: #80bfff;
  color: white;
  padding: 10px;
  border: none;
  border-radius: 10px;
  margin-left: 10px;
  cursor: pointer;
  font-size: 16px;
}

.chat-send-button:hover {
  background-color: #0066cc;
}

