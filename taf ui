import React, { useState } from 'react';
import { TextField, FormControl, InputLabel, Select, MenuItem, Grid, Button } from '@material-ui/core';

interface ProjectFormProps {
  onSubmit: (data: { projectName: string, epic: string, assignee: string, jiraSecretName: string }) => void;
}

export const ProjectForm: React.FC<ProjectFormProps> = ({ onSubmit }) => {
  const [projectName, setProjectName] = useState('');
  const [epic, setEpic] = useState('');
  const [assignee, setAssignee] = useState('');
  const [jiraSecretName, setJiraSecretName] = useState('');

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    onSubmit({ projectName, epic, assignee, jiraSecretName });
  }

  return (
    <form onSubmit={handleSubmit}>
      <Grid container spacing={3}>
        <Grid item xs={12}>
          <TextField
            label="Project Name"
            variant="outlined"
            fullWidth
            required
            value={projectName}
            onChange={e => setProjectName(e.target.value)}
          />
        </Grid>
        <Grid item xs={12}>
          <TextField
            label="Epic"
            variant="outlined"
            fullWidth
            required
            value={epic}
            onChange={e => setEpic(e.target.value)}
          />
        </Grid>
        <Grid item xs={12}>
          <FormControl variant="outlined" fullWidth>
            <InputLabel id="assignee-label">Assignee</InputLabel>
            <Select
              labelId="assignee-label"
              value={assignee}
              onChange={e => setAssignee(e.target.value as string)}
              label="Assignee"
              required
            >
              <MenuItem value="john">John</MenuItem>
              <MenuItem value="jane">Jane</MenuItem>
              <MenuItem value="jim">Jim</MenuItem>
            </Select>
          </FormControl>
        </Grid>
        <Grid item xs={12}>
          <TextField
            label="Jira Secret Name"
            variant="outlined"
            fullWidth
            required
            value={jiraSecretName}
            onChange={e => setJiraSecretName(e.target.value)}
          />
        </Grid>
        <Grid item xs={12}>
          <Button type="submit" variant="contained" color="primary">Submit</Button>
        </Grid>
      </Grid>
    </form>
  );
};



import React, { useState } from 'react';
import { TextField, Grid, Button, Divider } from '@material-ui/core';

interface TestCase {
  id: string;
  name: string;
  input1: string;
  input2: string;
  input3: string;
  input4: string;
}

interface TestPlanFormProps {
  onSubmit: (data: { testPlanId: string, testCases: TestCase[] }) => void;
}

export const TestPlanForm: React.FC<TestPlanFormProps> = ({ onSubmit }) => {
  const [testPlanId, setTestPlanId] = useState('');
  const [testCases, setTestCases] = useState<TestCase[]>([{ id: '', name: '', input1: '', input2: '', input3: '', input4: '' }]);

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    onSubmit({ testPlanId, testCases });
  }

 
